{"version":3,"sources":["js/transactions.js","task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","logSuccess","id","amount","time","console","log","logError","warn","then","catch"],"mappings":";;;AAAA,MAAMA,EAA4B,CAACC,EAAKC,KACtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGzCK,EAAkBC,IAChBC,MAAAA,EAAQR,EAA0B,IAAK,KACtC,OAAA,IAAIS,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACUT,KAAKE,SAAW,IAEjCK,EAAQH,GAEVI,EAAOJ,IACNC,MAIDK,EAAa,EAAGC,GAAAA,EAAIC,OAAQC,MAChCC,QAAQC,mBAAmBJ,kBAAmBE,SAG1CG,EAAW,EAAGL,GAAAA,MAClBG,QAAQG,qCAAqCN,+BAa/CR,EAAgB,CAAEQ,GAAI,GAAIC,OAAQ,MAAOM,KAAKR,GAAYS,MAAMH,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIC,OAAQ,MAAOM,KAAKR,GAAYS,MAAMH,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIC,OAAQ,KAAMM,KAAKR,GAAYS,MAAMH,GAE/Db,EAAgB,CAAEQ,GAAI,GAAIC,OAAQ,MAAOM,KAAKR,GAAYS,MAAMH;;ACxChE,aADA,QAAA,gBACA,QAAA","file":"task3.b0ec817f.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      if (canProcess) {\n        resolve(transaction);\n      }\n      reject(transaction);\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, amount: time }) => {\n  console.log(`Transaction ${id} processed in ${time} ms`);\n};\n\nconst logError = ({ id }) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);","import './styles.css';\nimport './js/transactions';"]}